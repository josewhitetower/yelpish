# This is a basic workflow to help you get started with Actions
# https://www.dawntraoz.com/blog/how-to-add-ci-to-frontend-project-with-github-actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
# This workflow contains a job called "integration"
  integration:
  # A strategy that defines different variations of an environment to run each job in.
   strategy:
    matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        node: [12]
    # # The runners that the job will run on
   runs-on: ${{ matrix.os }}
   steps:
      # - name: Setup Node.js environment
      #   uses: actions/setup-node@v1.4.3
      #   with:
      #     node-version: ${{ matrix.node }}

      - name: Checkout master branch
        uses: actions/checkout@v2

      - name: Cache node_modules
        uses: actions/cache@v2.1.0
        with:
          # A list of files, directories, and wildcard patterns to cache and restore
          path: node_modules
          # An explicit key for restoring and saving the cache
          key: ${{ matrix.os }}-node-v${{ matrix.node }}-deps-${{ hashFiles(format('{0}{1}', github.workspace, '/package-lock.json')) }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm install && cd server && npm install

      - name: Run ESLint
        run: npm run lint
